package com.dashidao.foundation.domain;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.dashidao.core.domain.IdEntity;
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Entity
@Table(name = "dashidao_ordercom")
/**
 * 订单评论
 * @author lsp
 *
 */
public class OrderCom  extends IdEntity{

	/**
	 * 所属订单
	 */
	@ManyToOne
	private  OrderForm orderForm;
	/**
	 * 评论用户
	 */
	@ManyToOne
	private  User user;
	/**
	 * 所属商品
	 */
	@ManyToOne
	private  Goods goods;
	/**
	 * 所属店铺
	 */
	@ManyToOne
	private  Store store;
	/**
	 * 评论内容
	 */
	private  String content;
	/**
	 * 父级评论
	 */
	@ManyToOne
	private  OrderCom parent;
	/**
	 * 子级评论
	 */
	@OneToMany(mappedBy = "parent")
	private  List<OrderCom> lschild;
	/**
	 * 状态0默认1删除
	 */
	private int state;
	public OrderForm getOrderForm() {
		return orderForm;
	}
	public void setOrderForm(OrderForm orderForm) {
		this.orderForm = orderForm;
	}
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
	public Store getStore() {
		return store;
	}
	public void setStore(Store store) {
		this.store = store;
	}
	public String getContent() {
		return content;
	}
	public void setContent(String content) {
		this.content = content;
	}
	public OrderCom getParent() {
		return parent;
	}
	public void setParent(OrderCom parent) {
		this.parent = parent;
	}
	public List<OrderCom> getLschild() {
		return lschild;
	}
	public void setLschild(List<OrderCom> lschild) {
		this.lschild = lschild;
	}
	public int getState() {
		return state;
	}
	public void setState(int state) {
		this.state = state;
	}
	public Goods getGoods() {
		return goods;
	}
	public void setGoods(Goods goods) {
		this.goods = goods;
	}
	
}
